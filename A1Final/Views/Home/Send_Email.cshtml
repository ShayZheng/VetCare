@model A1Final.Models.SendEmailViewModel
@{
    ViewBag.Title = "Send_Email";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<h2>Send Email</h2>
<fieldset>
    @using (@Html.BeginForm("Send_Email", "Home", FormMethod.Post, new { @id = "form1", @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        
        if (@ViewBag.Result != null)
            {
            <div class="alert alert-info">@ViewBag.Result</div>
            }
            
        @Html.ValidationSummary()
        <input type="submit" value="Send" />

        <table>
            <tr>
                <td>
                    To:
                </td>
                <td>
                    @Html.TextBoxFor(m => m.ToEmail)
                </td>
            </tr>
            <tr></tr>
            <tr>
                <td>
                    Subject:
                </td>
                <td>
                    @Html.TextBoxFor(m => m.Subject)
                </td>
            </tr>
            <tr></tr>
            <tr>
                <td>
                    Body:
                </td>
                <td>
                    @Html.TextAreaFor(m => m.Contents)
                </td>
            </tr>
            <tr></tr>
            <tr>
                <td>
                    Attachment
                </td>
                <td>
                    <input type="file" name="fileUploader" />
                </td>
            </tr>

        </table>

            }
        </fieldset>

<h2>View</h2>


@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    if (@ViewBag.Result != null)
    {
        <div class="alert alert-info">@ViewBag.Result</div>
    }

<div class="form-horizontal">
    <h4>SendEmailViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ToEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ToEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ToEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Contents, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="control-label col-md-2">
            Attachment
        </div>
        <div class="col-md-10">
            <input type="file" name="fileUploader" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Send" class="btn btn-default" />
        </div>
    </div>
</div>
}*@

<div>
    @Html.ActionLink("Back to Home", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
